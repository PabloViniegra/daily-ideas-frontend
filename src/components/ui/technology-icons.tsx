export const NextjsIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      xmlns='http://www.w3.org/2000/svg'
      viewBox='0 0 128 128'
      className={className}
    >
      <path d='M64 0C28.7 0 0 28.7 0 64s28.7 64 64 64c11.2 0 21.7-2.9 30.8-7.9L48.4 55.3v36.6h-6.8V41.8h6.8l50.5 75.8C116.4 106.2 128 86.5 128 64c0-35.3-28.7-64-64-64zm22.1 84.6l-7.5-11.3V41.8h7.5v42.8z' />
    </svg>
  )
}

export const ReactIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      width='569px'
      height='512px'
      viewBox='0 0 569 512'
      version='1.1'
      xmlns='http://www.w3.org/2000/svg'
      className={className}
    >
      <g fill='none' fillRule='evenodd'>
        <g transform='translate(-227, -256)' fill='#58C4DC' fillRule='nonzero'>
          <g transform='translate(227, 256)'>
            <path
              d='M285.5,201 C255.400481,201 231,225.400481 231,255.5 C231,285.599519 255.400481,310 285.5,310 C315.599519,310 340,285.599519 340,255.5 C340,225.400481 315.599519,201 285.5,201'
              id='react_dark__Path'
            />
            <path
              d='M568.959856,255.99437 C568.959856,213.207656 529.337802,175.68144 466.251623,150.985214 C467.094645,145.423543 467.85738,139.922107 468.399323,134.521063 C474.621631,73.0415145 459.808523,28.6686204 426.709856,9.5541429 C389.677085,-11.8291748 337.36955,3.69129898 284.479928,46.0162134 C231.590306,3.69129898 179.282771,-11.8291748 142.25,9.5541429 C109.151333,28.6686204 94.3382249,73.0415145 100.560533,134.521063 C101.102476,139.922107 101.845139,145.443621 102.708233,151.02537 C97.4493791,153.033193 92.2908847,155.161486 87.3331099,157.39017 C31.0111824,182.708821 0,217.765415 0,255.99437 C0,298.781084 39.6220545,336.307301 102.708233,361.003527 C101.845139,366.565197 101.102476,372.066633 100.560533,377.467678 C94.3382249,438.947226 109.151333,483.32012 142.25,502.434597 C153.629683,508.887578 166.52439,512.186771 179.603923,511.991836 C210.956328,511.991836 247.567589,495.487529 284.479928,465.972527 C321.372196,495.487529 358.003528,511.991836 389.396077,511.991836 C402.475265,512.183856 415.36922,508.884856 426.75,502.434597 C459.848667,483.32012 474.661775,438.947226 468.439467,377.467678 C467.897524,372.066633 467.134789,366.565197 466.291767,361.003527 C529.377946,336.347457 569,298.761006 569,255.99437 M389.155214,27.1025182 C397.565154,26.899606 405.877839,28.9368502 413.241569,33.0055186 C436.223966,46.2772304 446.540955,82.2775015 441.522965,131.770345 C441.181741,135.143488 440.780302,138.556788 440.298575,141.990165 C414.066922,134.08804 387.205771,128.452154 360.010724,125.144528 C343.525021,103.224055 325.192524,82.7564475 305.214266,63.9661533 C336.586743,39.7116483 366.032313,27.1025182 389.135142,27.1025182 M378.356498,310.205598 C368.204912,327.830733 357.150626,344.919965 345.237759,361.405091 C325.045049,363.479997 304.758818,364.51205 284.459856,364.497299 C264.167589,364.51136 243.888075,363.479308 223.702025,361.405091 C211.820914,344.919381 200.80007,327.83006 190.683646,310.205598 C180.532593,292.629285 171.306974,274.534187 163.044553,255.99437 C171.306974,237.454554 180.532593,219.359455 190.683646,201.783142 C200.784121,184.229367 211.770999,167.201087 223.601665,150.764353 C243.824636,148.63809 264.145559,147.579168 284.479928,147.591877 C304.772146,147.579725 325.051559,148.611772 345.237759,150.68404 C357.109048,167.14607 368.136094,184.201112 378.27621,201.783142 C388.419418,219.363718 397.644825,237.458403 405.915303,255.99437 C397.644825,274.530337 388.419418,292.625022 378.27621,310.205598 M419.724813,290.127366 C426.09516,307.503536 431.324985,325.277083 435.380944,343.334682 C417.779633,348.823635 399.836793,353.149774 381.668372,356.285142 C388.573127,345.871232 395.263781,335.035679 401.740334,323.778483 C408.143291,312.655143 414.144807,301.431411 419.805101,290.207679 M246.363271,390.377981 C258.848032,391.140954 271.593728,391.582675 284.5,391.582675 C297.406272,391.582675 310.232256,391.140954 322.737089,390.377981 C310.880643,404.583418 298.10766,417.997563 284.5,430.534446 C270.921643,417.999548 258.18192,404.585125 246.363271,390.377981 Z M187.311556,356.244986 C169.137286,353.123646 151.187726,348.810918 133.578912,343.334682 C137.618549,325.305649 142.828222,307.559058 149.174827,290.207679 C154.754833,301.431411 160.736278,312.655143 167.239594,323.778483 C173.74291,334.901824 180.467017,345.864539 187.311556,356.285142 M149.174827,221.760984 C142.850954,204.473938 137.654787,186.794745 133.619056,168.834762 C151.18418,163.352378 169.085653,159.013101 187.211197,155.844146 C180.346585,166.224592 173.622478,176.986525 167.139234,188.210257 C160.65599,199.433989 154.734761,210.517173 149.074467,221.760984 M322.616657,121.590681 C310.131896,120.827708 297.3862,120.385987 284.379568,120.385987 C271.479987,120.385987 258.767744,120.787552 246.242839,121.590681 C258.061488,107.383537 270.801211,93.9691137 284.379568,81.4342157 C297.99241,93.9658277 310.765727,107.380324 322.616657,121.590681 Z M401.70019,188.210257 C395.196875,176.939676 388.472767,166.09743 381.527868,155.68352 C399.744224,158.819049 417.734224,163.151949 435.380944,168.654058 C431.331963,186.680673 426.122466,204.426664 419.785029,221.781062 C414.205023,210.55733 408.203506,199.333598 401.720262,188.230335 M127.517179,131.790423 C122.438973,82.3176579 132.816178,46.2973086 155.778503,33.0255968 C163.144699,28.9632474 171.455651,26.9264282 179.864858,27.1225964 C202.967687,27.1225964 232.413257,39.7317265 263.785734,63.9862316 C243.794133,82.7898734 225.448298,103.270812 208.949132,125.204763 C181.761691,128.528025 154.90355,134.14313 128.661281,141.990165 C128.199626,138.556788 127.778115,135.163566 127.456963,131.790423 M98.4529773,182.106474 C101.54406,180.767925 104.695358,179.429376 107.906872,178.090828 C114.220532,204.735668 122.781793,230.7969 133.498624,255.99437 C122.761529,281.241316 114.193296,307.357063 107.8868,334.058539 C56.7434387,313.076786 27.0971497,284.003505 27.0971497,255.99437 C27.0971497,229.450947 53.1907013,202.526037 98.4529773,182.106474 Z M155.778503,478.963143 C132.816178,465.691432 122.438973,429.671082 127.517179,380.198317 C127.838331,376.825174 128.259842,373.431953 128.721497,369.978497 C154.953686,377.878517 181.814655,383.514365 209.009348,386.824134 C225.500295,408.752719 243.832321,429.233234 263.805806,448.042665 C220.069,481.834331 180.105722,492.97775 155.838719,478.963143 M441.502893,380.198317 C446.520883,429.691161 436.203894,465.691432 413.221497,478.963143 C388.974566,493.017906 348.991216,481.834331 305.274481,448.042665 C325.241364,429.232737 343.566681,408.752215 360.050868,386.824134 C387.245915,383.516508 414.107066,377.880622 440.338719,369.978497 C440.820446,373.431953 441.221885,376.825174 441.563109,380.198317 M461.193488,334.018382 C454.869166,307.332523 446.294494,281.231049 435.561592,255.99437 C446.289797,230.744081 454.857778,204.629101 461.173416,177.930202 C512.216417,198.911955 541.942994,227.985236 541.942994,255.99437 C541.942994,284.003505 512.296705,313.076786 461.153344,334.058539'
              id='react_dark__Shape'
            />
          </g>
        </g>
      </g>
    </svg>
  )
}

export const VueIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      className={className}
      viewBox='0 0 256 221'
      width='256'
      height='221'
      xmlns='http://www.w3.org/2000/svg'
      preserveAspectRatio='xMidYMid'
    >
      <path
        d='M204.8 0H256L128 220.8 0 0h97.92L128 51.2 157.44 0h47.36Z'
        fill='#41B883'
      />
      <path
        d='m0 0 128 220.8L256 0h-51.2L128 132.48 50.56 0H0Z'
        fill='#41B883'
      />
      <path
        d='M50.56 0 128 133.12 204.8 0h-47.36L128 51.2 97.92 0H50.56Z'
        fill='#35495E'
      />
    </svg>
  )
}

export const NuxtIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      className={className}
      viewBox='0 0 256 168'
      xmlns='http://www.w3.org/2000/svg'
      width='256'
      height='168'
      preserveAspectRatio='xMidYMid'
    >
      <path
        fill='#00DC82'
        d='M143.618 167.029h95.166c3.023 0 5.992-.771 8.61-2.237a16.963 16.963 0 0 0 6.302-6.115 16.324 16.324 0 0 0 2.304-8.352c0-2.932-.799-5.811-2.312-8.35L189.778 34.6a16.966 16.966 0 0 0-6.301-6.113 17.626 17.626 0 0 0-8.608-2.238c-3.023 0-5.991.772-8.609 2.238a16.964 16.964 0 0 0-6.3 6.113l-16.342 27.473-31.95-53.724a16.973 16.973 0 0 0-6.304-6.112A17.638 17.638 0 0 0 96.754 0c-3.022 0-5.992.772-8.61 2.237a16.973 16.973 0 0 0-6.303 6.112L2.31 141.975A16.302 16.302 0 0 0 0 150.325c0 2.932.793 5.813 2.304 8.352a16.964 16.964 0 0 0 6.302 6.115 17.628 17.628 0 0 0 8.61 2.237h59.737c23.669 0 41.123-10.084 53.134-29.758l29.159-48.983 15.618-26.215 46.874 78.742h-62.492l-15.628 26.214Zm-67.64-26.24-41.688-.01L96.782 35.796l31.181 52.492-20.877 35.084c-7.976 12.765-17.037 17.416-31.107 17.416Z'
      />
    </svg>
  )
}

export const ElectronIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      className={className}
      xmlns='http://www.w3.org/2000/svg'
      preserveAspectRatio='xMidYMid'
      viewBox='0 0 128 128'
    >
      <circle cx='64' cy='64' r='64' fill='#2F3242' />
      <path
        fill='#A2ECFB'
        d='M51.395 39.503a1.8 1.8 0 0 0 .646-3.542l-.646 3.542Zm-22.78 4.072 1.56.9-1.56-.9Zm.324 17.36a1.8 1.8 0 0 0 3.125-1.788l-3.125 1.789Zm8.755 5.81a1.8 1.8 0 0 0-2.665 2.422l2.664-2.421Zm16.055 14.956-.901 1.559.9-1.559Zm43.172 7.814a1.8 1.8 0 1 0-2.03-2.973l2.03 2.973ZM52.04 35.961c-5.57-1.016-10.756-1.064-15.067-.023-4.32 1.043-7.89 3.22-9.918 6.738l3.119 1.798c1.394-2.42 3.97-4.15 7.644-5.037 3.682-.89 8.336-.89 13.576.066l.646-3.542Zm-24.985 6.715c-3.013 5.227-1.778 11.864 1.883 18.26l3.125-1.789c-3.406-5.95-3.955-11.089-1.89-14.673l-3.118-1.798Zm7.973 26.49c4.61 5.074 10.687 9.97 17.819 14.094l1.802-3.117c-6.842-3.956-12.62-8.624-16.956-13.397l-2.665 2.42ZM52.848 83.26c8.496 4.913 17.198 7.984 24.887 9.1 7.624 1.108 14.54.328 19.186-2.845l-2.03-2.973c-3.566 2.435-9.4 3.307-16.639 2.256-7.173-1.041-15.443-3.937-23.602-8.655l-1.802 3.117Zm52.511 1.648a6.292 6.292 0 0 0-6.288-6.295v3.6a2.691 2.691 0 0 1 2.688 2.695h3.6Zm-6.288-6.295a6.291 6.291 0 0 0-6.288 6.295h3.6a2.691 2.691 0 0 1 2.688-2.695v-3.6Zm-6.288 6.295a6.291 6.291 0 0 0 6.288 6.295v-3.6a2.691 2.691 0 0 1-2.688-2.695h-3.6Zm6.288 6.295a6.292 6.292 0 0 0 6.288-6.295h-3.6a2.691 2.691 0 0 1-2.688 2.695v3.6Z'
      />
      <path
        fill='#A2ECFB'
        d='M91.487 65.382a1.8 1.8 0 1 0 2.75 2.324l-2.75-2.324Zm7.83-21.747-1.56.9 1.56-.9Zm-14.81-8.394a1.8 1.8 0 1 0-.047 3.6l.047-3.6Zm-9.566 4.64a1.8 1.8 0 0 0-.756-3.52l.756 3.52Zm-21.157 6.492.9 1.558-.9-1.558ZM25.549 80.905a1.8 1.8 0 0 0 3.562-.522l-3.562.522Zm68.688-13.2c3.647-4.314 6.268-8.778 7.515-13.027 1.249-4.257 1.148-8.43-.876-11.941l-3.119 1.797c1.392 2.415 1.603 5.508.54 9.13-1.065 3.63-3.379 7.658-6.81 11.718l2.75 2.324Zm6.639-24.968c-2.964-5.143-9.168-7.402-16.369-7.496l-.047 3.6c6.673.087 11.266 2.17 13.297 5.693l3.119-1.797Zm-26.69-6.377c-6.75 1.449-14.098 4.288-21.303 8.455l1.802 3.116c6.912-3.997 13.91-6.69 20.256-8.05l-.756-3.52Zm-21.303 8.455c-8.746 5.057-15.916 11.28-20.734 17.578-4.772 6.237-7.434 12.819-6.6 18.512l3.562-.522c-.627-4.28 1.364-9.877 5.897-15.803 4.488-5.866 11.276-11.791 19.677-16.649l-1.802-3.116Z'
      />
      <path
        fill='#A2ECFB'
        d='M49.083 87.23a1.8 1.8 0 1 0-3.39 1.212l3.39-1.212Zm29.48 9.196a1.8 1.8 0 0 0-3.086-1.853l3.087 1.853ZM79.57 85.18a1.8 1.8 0 1 0 3.436 1.073L79.57 85.18Zm4.813-21.113h-1.8 1.8ZM69.156 22.53a1.8 1.8 0 1 0-1.463 3.29l1.463-3.29ZM45.693 88.442c1.906 5.332 4.457 9.849 7.51 13.063 3.06 3.219 6.725 5.226 10.78 5.226v-3.6c-2.785 0-5.566-1.366-8.17-4.106-2.609-2.746-4.936-6.777-6.73-11.796l-3.39 1.213Zm18.29 18.289c5.886 0 10.91-4.189 14.58-10.305l-3.086-1.853c-3.399 5.662-7.465 8.558-11.494 8.558v3.6Zm19.023-20.478c2.02-6.467 3.177-14.07 3.177-22.186h-3.6c0 7.787-1.11 15.025-3.013 21.113l3.436 1.073Zm3.177-22.186c0-9.953-1.74-19.145-4.687-26.417-2.921-7.206-7.152-12.813-12.34-15.12l-1.463 3.29c3.943 1.753 7.692 6.336 10.467 13.183 2.749 6.78 4.423 15.504 4.423 25.064h3.6Z'
      />
      <path
        fillRule='evenodd'
        stroke='#A2ECFB'
        strokeLinecap='round'
        strokeWidth='3.6'
        d='M103.559 84.908a4.491 4.491 0 0 0-4.488-4.495 4.491 4.491 0 0 0-4.488 4.495 4.491 4.491 0 0 0 4.488 4.495 4.491 4.491 0 0 0 4.488-4.495v0ZM28.814 89.403a4.492 4.492 0 0 0 4.488-4.495 4.492 4.492 0 0 0-4.488-4.495 4.491 4.491 0 0 0-4.488 4.495 4.491 4.491 0 0 0 4.488 4.495v0Z'
        clipRule='evenodd'
      />
      <ellipse
        cx='63.983'
        cy='23.204'
        stroke='#A2ECFB'
        strokeLinecap='round'
        strokeWidth='3.6'
        rx='4.488'
        ry='4.495'
      />
      <path
        fill='#A2ECFB'
        fillRule='evenodd'
        d='M64.85 68.086a4.112 4.112 0 0 1-1.733-8.037 4.105 4.105 0 0 1 4.878 3.15 4.111 4.111 0 0 1-3.145 4.887Z'
        clipRule='evenodd'
      />
    </svg>
  )
}

export const D3Icon = ({ className }: { className?: string }) => {
  return (
    <svg
      version='1.1'
      xmlns='http://www.w3.org/2000/svg'
      viewBox='-10 -10 116 111'
      className={className}
    >
      <clipPath id='D3__clip'>
        <path d='M0,0h7.75a45.5,45.5 0 1 1 0,91h-7.75v-20h7.75a25.5,25.5 0 1 0 0,-51h-7.75zm36.2510,0h32a27.75,27.75 0 0 1 21.331,45.5a27.75,27.75 0 0 1 -21.331,45.5h-32a53.6895,53.6895 0 0 0 18.7464,-20h13.2526a7.75,7.75 0 1 0 0,-15.5h-7.75a53.6895,53.6895 0 0 0 0,-20h7.75a7.75,7.75 0 1 0 0,-15.5h-13.2526a53.6895,53.6895 0 0 0 -18.7464,-20z' />
      </clipPath>
      <linearGradient
        id='D3__gradient-1'
        gradientUnits='userSpaceOnUse'
        x1='7'
        y1='64'
        x2='50'
        y2='107'
      >
        <stop offset='0' stopColor='#f9a03c' />
        <stop offset='1' stopColor='#f7974e' />
      </linearGradient>
      <linearGradient
        id='D3__gradient-2'
        gradientUnits='userSpaceOnUse'
        x1='2'
        y1='-2'
        x2='87'
        y2='84'
      >
        <stop offset='0' stopColor='#f26d58' />
        <stop offset='1' stopColor='#f9a03c' />
      </linearGradient>
      <linearGradient
        id='D3__gradient-3'
        gradientUnits='userSpaceOnUse'
        x1='45'
        y1='-10'
        x2='108'
        y2='53'
      >
        <stop offset='0' stopColor='#b84e51' />
        <stop offset='1' stopColor='#f68e48' />
      </linearGradient>
      <g clipPath='url(#D3__clip)'>
        <path d='M-100,-102m-28,0v300h300z' fill='url(#D3__gradient-1)' />
        <path d='M-100,-102m28,0h300v300z' fill='url(#D3__gradient-3)' />
        <path
          d='M-100,-102l300,300'
          fill='none'
          stroke='url(#D3__gradient-2)'
          strokeWidth='40'
        />
      </g>
    </svg>
  )
}

export const NodeIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      viewBox='0 0 256 292'
      xmlns='http://www.w3.org/2000/svg'
      className={className}
      width='256'
      height='292'
    >
      <defs>
        <linearGradient
          id='nodejs__a'
          x1='68.188%'
          x2='27.823%'
          y1='17.487%'
          y2='89.755%'
        >
          <stop offset='0%' stopColor='#41873F' />
          <stop offset='32.88%' stopColor='#418B3D' />
          <stop offset='63.52%' stopColor='#419637' />
          <stop offset='93.19%' stopColor='#3FA92D' />
          <stop offset='100%' stopColor='#3FAE2A' />
        </linearGradient>
        <linearGradient
          id='nodejs__c'
          x1='43.277%'
          x2='159.245%'
          y1='55.169%'
          y2='-18.306%'
        >
          <stop offset='13.76%' stopColor='#41873F' />
          <stop offset='40.32%' stopColor='#54A044' />
          <stop offset='71.36%' stopColor='#66B848' />
          <stop offset='90.81%' stopColor='#6CC04A' />
        </linearGradient>
        <linearGradient
          id='nodejs__f'
          x1='-4.389%'
          x2='101.499%'
          y1='49.997%'
          y2='49.997%'
        >
          <stop offset='9.192%' stopColor='#6CC04A' />
          <stop offset='28.64%' stopColor='#66B848' />
          <stop offset='59.68%' stopColor='#54A044' />
          <stop offset='86.24%' stopColor='#41873F' />
        </linearGradient>
        <path
          id='nodejs__b'
          d='M134.923 1.832c-4.344-2.443-9.502-2.443-13.846 0L6.787 67.801C2.443 70.244 0 74.859 0 79.745v132.208c0 4.887 2.715 9.502 6.787 11.945l114.29 65.968c4.344 2.444 9.502 2.444 13.846 0l114.29-65.968c4.344-2.443 6.787-7.058 6.787-11.945V79.745c0-4.886-2.715-9.501-6.787-11.944L134.923 1.832Z'
        />
        <path
          id='nodejs__e'
          d='M134.923 1.832c-4.344-2.443-9.502-2.443-13.846 0L6.787 67.801C2.443 70.244 0 74.859 0 79.745v132.208c0 4.887 2.715 9.502 6.787 11.945l114.29 65.968c4.344 2.444 9.502 2.444 13.846 0l114.29-65.968c4.344-2.443 6.787-7.058 6.787-11.945V79.745c0-4.886-2.715-9.501-6.787-11.944L134.923 1.832Z'
        />
      </defs>
      <path
        fill='url(#nodejs__a)'
        d='M134.923 1.832c-4.344-2.443-9.502-2.443-13.846 0L6.787 67.801C2.443 70.244 0 74.859 0 79.745v132.208c0 4.887 2.715 9.502 6.787 11.945l114.29 65.968c4.344 2.444 9.502 2.444 13.846 0l114.29-65.968c4.344-2.443 6.787-7.058 6.787-11.945V79.745c0-4.886-2.715-9.501-6.787-11.944L134.923 1.832Z'
      />
      <mask id='nodejs__d' fill='#fff'>
        <use xlinkHref='#nodejs__b' />
      </mask>
      <path
        fill='url(#nodejs__c)'
        d='M249.485 67.8 134.65 1.833c-1.086-.542-2.443-1.085-3.529-1.357L2.443 220.912c1.086 1.357 2.444 2.443 3.8 3.258l114.834 65.968c3.258 1.9 7.059 2.443 10.588 1.357L252.47 70.515c-.815-1.086-1.9-1.9-2.986-2.714Z'
        mask='url(#nodejs__d)'
      />
      <mask id='nodejs__g' fill='#fff'>
        <use xlinkHref='#nodejs__e' />
      </mask>
      <path
        fill='url(#nodejs__f)'
        d='M249.756 223.898c3.258-1.9 5.701-5.158 6.787-8.687L130.579.204c-3.258-.543-6.787-.272-9.773 1.628L6.786 67.53l122.979 224.238c1.628-.272 3.529-.815 5.158-1.63l114.833-66.239Z'
        mask='url(#nodejs__g)'
      />
    </svg>
  )
}

export const MongoIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      viewBox='0 0 256 549'
      xmlns='http://www.w3.org/2000/svg'
      className={className}
      width='256'
      height='549'
      preserveAspectRatio='xMidYMid'
    >
      <path
        fill='#01EC64'
        d='M175.622 61.108C152.612 33.807 132.797 6.078 128.749.32a1.03 1.03 0 0 0-1.492 0c-4.048 5.759-23.863 33.487-46.874 60.788-197.507 251.896 31.108 421.89 31.108 421.89l1.917 1.28c1.704 26.234 5.966 63.988 5.966 63.988h17.045s4.26-37.54 5.965-63.987l1.918-1.494c.213.214 228.828-169.78 31.32-421.677Zm-47.726 418.05s-10.227-8.744-12.997-13.222v-.428l12.358-274.292c0-.853 1.279-.853 1.279 0l12.357 274.292v.428c-2.77 4.478-12.997 13.223-12.997 13.223Z'
      />
    </svg>
  )
}

export const SupabaseIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      viewBox='0 0 109 113'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
      className={className}
    >
      <path
        d='M63.7076 110.284C60.8481 113.885 55.0502 111.912 54.9813 107.314L53.9738 40.0627L99.1935 40.0627C107.384 40.0627 111.952 49.5228 106.859 55.9374L63.7076 110.284Z'
        fill='url(#supabase__paint0_linear)'
      />
      <path
        d='M63.7076 110.284C60.8481 113.885 55.0502 111.912 54.9813 107.314L53.9738 40.0627L99.1935 40.0627C107.384 40.0627 111.952 49.5228 106.859 55.9374L63.7076 110.284Z'
        fill='url(#supabase__paint1_linear)'
        fillOpacity='0.2'
      />
      <path
        d='M45.317 2.07103C48.1765 -1.53037 53.9745 0.442937 54.0434 5.041L54.4849 72.2922H9.83113C1.64038 72.2922 -2.92775 62.8321 2.1655 56.4175L45.317 2.07103Z'
        fill='#3ECF8E'
      />
      <defs>
        <linearGradient
          id='supabase__paint0_linear'
          x1='53.9738'
          y1='54.974'
          x2='94.1635'
          y2='71.8295'
          gradientUnits='userSpaceOnUse'
        >
          <stop stopColor='#249361' />
          <stop offset='1' stopColor='#3ECF8E' />
        </linearGradient>
        <linearGradient
          id='supabase__paint1_linear'
          x1='36.1558'
          y1='30.578'
          x2='54.4844'
          y2='65.0806'
          gradientUnits='userSpaceOnUse'
        >
          <stop />
          <stop offset='1' stopOpacity='0' />
        </linearGradient>
      </defs>
    </svg>
  )
}

export const TypescriptIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      className={className}
      viewBox='0 0 256 256'
      width='256'
      height='256'
      xmlns='http://www.w3.org/2000/svg'
      preserveAspectRatio='xMidYMid'
    >
      <path
        d='M20 0h216c11.046 0 20 8.954 20 20v216c0 11.046-8.954 20-20 20H20c-11.046 0-20-8.954-20-20V20C0 8.954 8.954 0 20 0Z'
        fill='#3178C6'
      />
      <path
        d='M150.518 200.475v27.62c4.492 2.302 9.805 4.028 15.938 5.179 6.133 1.151 12.597 1.726 19.393 1.726 6.622 0 12.914-.633 18.874-1.899 5.96-1.266 11.187-3.352 15.678-6.257 4.492-2.906 8.048-6.704 10.669-11.394 2.62-4.689 3.93-10.486 3.93-17.391 0-5.006-.749-9.394-2.246-13.163a30.748 30.748 0 0 0-6.479-10.055c-2.821-2.935-6.205-5.567-10.149-7.898-3.945-2.33-8.394-4.531-13.347-6.602-3.628-1.497-6.881-2.949-9.761-4.359-2.879-1.41-5.327-2.848-7.342-4.316-2.016-1.467-3.571-3.021-4.665-4.661-1.094-1.64-1.641-3.495-1.641-5.567 0-1.899.489-3.61 1.468-5.135s2.362-2.834 4.147-3.927c1.785-1.094 3.973-1.942 6.565-2.547 2.591-.604 5.471-.906 8.638-.906 2.304 0 4.737.173 7.299.518 2.563.345 5.14.877 7.732 1.597a53.669 53.669 0 0 1 7.558 2.719 41.7 41.7 0 0 1 6.781 3.797v-25.807c-4.204-1.611-8.797-2.805-13.778-3.582-4.981-.777-10.697-1.165-17.147-1.165-6.565 0-12.784.705-18.658 2.115-5.874 1.409-11.043 3.61-15.506 6.602-4.463 2.993-7.99 6.805-10.582 11.437-2.591 4.632-3.887 10.17-3.887 16.615 0 8.228 2.375 15.248 7.127 21.06 4.751 5.811 11.963 10.731 21.638 14.759a291.458 291.458 0 0 1 10.625 4.575c3.283 1.496 6.119 3.049 8.509 4.66 2.39 1.611 4.276 3.366 5.658 5.265 1.382 1.899 2.073 4.057 2.073 6.474a9.901 9.901 0 0 1-1.296 4.963c-.863 1.524-2.174 2.848-3.93 3.97-1.756 1.122-3.945 1.999-6.565 2.632-2.62.633-5.687.95-9.2.95-5.989 0-11.92-1.05-17.794-3.151-5.875-2.1-11.317-5.25-16.327-9.451Zm-46.036-68.733H140V109H41v22.742h35.345V233h28.137V131.742Z'
        fill='#FFF'
      />
    </svg>
  )
}

export const PrismaIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      className={className}
      viewBox='0 0 256 310'
      width='256'
      height='310'
      xmlns='http://www.w3.org/2000/svg'
      preserveAspectRatio='xMidYMid'
    >
      <path
        fill='#fff'
        d='M254.313 235.519L148 9.749A17.063 17.063 0 00133.473.037a16.87 16.87 0 00-15.533 8.052L2.633 194.848a17.465 17.465 0 00.193 18.747L59.2 300.896a18.13 18.13 0 0020.363 7.489l163.599-48.392a17.929 17.929 0 0011.26-9.722 17.542 17.542 0 00-.101-14.76l-.008.008zm-23.802 9.683l-138.823 41.05c-4.235 1.26-8.3-2.411-7.419-6.685l49.598-237.484c.927-4.443 7.063-5.147 9.003-1.035l91.814 194.973a6.63 6.63 0 01-4.18 9.18h.007z'
      />
    </svg>
  )
}

export const TailwindIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      className={className}
      xmlns='http://www.w3.org/2000/svg'
      fill='none'
      viewBox='0 0 54 33'
    >
      <g clipPath='url(#tailwindcss__a)'>
        <path
          fill='#38bdf8'
          fillRule='evenodd'
          d='M27 0c-7.2 0-11.7 3.6-13.5 10.8 2.7-3.6 5.85-4.95 9.45-4.05 2.054.513 3.522 2.004 5.147 3.653C30.744 13.09 33.808 16.2 40.5 16.2c7.2 0 11.7-3.6 13.5-10.8-2.7 3.6-5.85 4.95-9.45 4.05-2.054-.513-3.522-2.004-5.147-3.653C36.756 3.11 33.692 0 27 0zM13.5 16.2C6.3 16.2 1.8 19.8 0 27c2.7-3.6 5.85-4.95 9.45-4.05 2.054.514 3.522 2.004 5.147 3.653C17.244 29.29 20.308 32.4 27 32.4c7.2 0 11.7-3.6 13.5-10.8-2.7 3.6-5.85 4.95-9.45 4.05-2.054-.513-3.522-2.004-5.147-3.653C23.256 19.31 20.192 16.2 13.5 16.2z'
          clipRule='evenodd'
        />
      </g>
      <defs>
        <clipPath id='tailwindcss__a'>
          <path fill='#fff' d='M0 0h54v32.4H0z' />
        </clipPath>
      </defs>
    </svg>
  )
}

export const tRPCIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      className={className}
      xmlns='http://www.w3.org/2000/svg'
      width='512'
      height='512'
      fill='none'
      viewBox='0 0 512 512'
    >
      <rect width='512' height='512' fill='#398CCB' rx='150' />
      <path
        fill='#fff'
        fillRule='evenodd'
        d='m255.446 75 71.077 41.008v22.548l86.031 49.682v84.986l23.077 13.322v82.062L364.6 409.615l-31.535-18.237-76.673 44.268-76.214-44.012-31.093 17.981-71.031-41.077v-81.992l22.177-12.803v-85.505l84.184-48.6.047-.002v-23.628L255.446 75Zm71.077 84.879v38.144l-71.031 41.008-71.03-41.008v-37.087l-.047.002-65.723 37.962v64.184l30.393-17.546 71.03 41.008v81.992l-21.489 12.427 57.766 33.358 58.226-33.611-21.049-12.174v-81.992l71.031-41.008 29.492 17.027V198.9l-67.569-39.021Zm-14.492 198.09v-50.054l43.338 25.016v50.054l-43.338-25.016Zm105.138-50.123-43.338 25.016v50.123l43.338-25.085v-50.054ZM96.515 357.9v-50.054l43.339 25.016v50.053L96.515 357.9Zm105.139-50.054-43.339 25.016v50.053l43.339-25.015v-50.054Zm119.608-15.923 43.338-25.015 43.338 25.015-43.338 25.039-43.338-25.039Zm-172.177-25.085-43.339 25.085 43.339 24.969 43.338-24.969-43.338-25.085Zm53.838-79.476v-50.054l43.292 25.038v50.031l-43.292-25.015Zm105.092-50.054-43.292 25.038v50.008l43.292-24.992v-50.054Zm-95.861-15.97 43.292-25.015 43.339 25.015-43.339 25.016-43.292-25.016Z'
        clipRule='evenodd'
      />
    </svg>
  )
}

export const PythonIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      xmlns='http://www.w3.org/2000/svg'
      fill='none'
      viewBox='16 16 32 32'
      className={className}
    >
      <path
        fill='url(#python__a)'
        d='M31.885 16c-8.124 0-7.617 3.523-7.617 3.523l.01 3.65h7.752v1.095H21.197S16 23.678 16 31.876c0 8.196 4.537 7.906 4.537 7.906h2.708v-3.804s-.146-4.537 4.465-4.537h7.688s4.32.07 4.32-4.175v-7.019S40.374 16 31.885 16zm-4.275 2.454a1.394 1.394 0 1 1 0 2.79 1.393 1.393 0 0 1-1.395-1.395c0-.771.624-1.395 1.395-1.395z'
      />
      <path
        fill='url(#python__b)'
        d='M32.115 47.833c8.124 0 7.617-3.523 7.617-3.523l-.01-3.65H31.97v-1.095h10.832S48 40.155 48 31.958c0-8.197-4.537-7.906-4.537-7.906h-2.708v3.803s.146 4.537-4.465 4.537h-7.688s-4.32-.07-4.32 4.175v7.019s-.656 4.247 7.833 4.247zm4.275-2.454a1.393 1.393 0 0 1-1.395-1.395 1.394 1.394 0 1 1 1.395 1.395z'
      />
      <defs>
        <linearGradient
          id='python__a'
          x1='19.075'
          x2='34.898'
          y1='18.782'
          y2='34.658'
          gradientUnits='userSpaceOnUse'
        >
          <stop stopColor='#387EB8' />
          <stop offset='1' stopColor='#366994' />
        </linearGradient>
        <linearGradient
          id='python__b'
          x1='28.809'
          x2='45.803'
          y1='28.882'
          y2='45.163'
          gradientUnits='userSpaceOnUse'
        >
          <stop stopColor='#FFE052' />
          <stop offset='1' stopColor='#FFC331' />
        </linearGradient>
      </defs>
    </svg>
  )
}

export const FlaskIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      className={className}
      fill='#ffffff'
      width='800px'
      height='800px'
      viewBox='0 0 32 32'
      version='1.1'
      xmlns='http://www.w3.org/2000/svg'
    >
      <path
        d='M14.319 9.028c0.35-0.62-1.443-0.835-0.235-0.219 0.112 0.037 0.087 0.262 0.235 0.219zM4.542 3.761c-0.762-0.995 1.432 0.167 0.659-0.875-0.652-0.519-1.278 0.585-0.659 0.875zM6.138 5.011c1.082-0.144-0.275-0.466-0.217-0.013zM5.283 4.806c0.232-0.315-0.407 0.16 0 0zM7.008 6.705c0.672 0.016-0.289-0.902 0.511-0.487-0.131-0.429-0.932-0.509-1.325-0.68-0.22 0.392 0.45 1.172 0.812 1.167zM4.916 6.619c0.575-0.434 1.984 0.257 1.080-0.431-0.087-0.077-1.982 0.522-1.080 0.431zM4.326 7.747c1.007-0.342 2.383-0.726 2.858 0.169-0.484-0.582-0.195-1.155 0.262-0.304 0.645 0.861 0.968-0.391 0.547-0.681 0.479 0.595 1.023 0.875 0.321 0.037 0.762-0.917-1.528 0.121-2.049 0.11-0.25 0.112-2.588 0.596-1.938 0.669zM6.2 10.881c0.246-0.304-0.337-0.081 0 0zM5.613 12.452c-0.060-0.362-0.175 0.192 0 0zM5.116 12.2c0.562-0.037 0.882-0.621-0.109-0.587-1.537-0.159 1.355 0.525-0.197 0.33-0.209 0.137 0.295 0.296 0.306 0.259zM29.116 27.445c0.696 0 2.109-0.216 0.594-0.216-0.237 0.038-1.386 0.030-0.595 0.216zM25.78 25.486c0.075-0.51-0.337 0.046 0 0zM28.395 27.273c0.015-0.444-0.38 0.2 0 0zM2.65 11.165c0.499-0.381-0.589-0.145 0 0zM4.549 12.515c0.306-0.325-0.663-0.132 0 0zM3.906 12.335c0.871-0.534-0.926-0.462 0 0zM10.348 8.28c0.291-0.765 1.132-0.306 0.135-0.154 0.021 0.081-0.030 0.395-0.135 0.154zM9.548 8.285c-0.069-1.517 1.398 0.54-0 0zM6.736 8.718c0.462-0.555 2.618-0.354 1.040-0.054-0.422-0.319-0.747 0.187-1.040 0.054zM6.541 8.848c0.277-0.325 0.080 0.287-0 0zM5.782 9.154c0.040-0.514 1.272 0.272 0.204 0.185zM5.226 9.144c0.437-0.325 0.232 0.182-0 0zM5.167 9.687c0.304-1.117 1.625 0.918 0.497 0.147-0.121-0.095-0.275-0.152-0.443-0.152-0.019 0-0.038 0.001-0.057 0.002l0.002-0zM2.050 11.274c-0.116-0.669-0.1-1.842 1.015-1.445-1.488 0.295 1.030 1.849 0.712 0.622 0.625 0.030 1.225-0.37 0.895 0.237 1.233-0.137 2.087-1.205 3.279-1.056 1.082-0.090 2.082-0.299 3.033-0.615l-0.091 0.026c0.822-0.060 1.612-0.945 1.162-1.468-0.218-0.013-0.473-0.021-0.73-0.021-0.993 0-1.96 0.114-2.888 0.329l0.086-0.017c-1.372 0.285-2.619 0.827-4.005 1.061-1.35 0.181 0.271 0.5-0.115 0.57-0.705 0.245 0.84 0.41-0.091 0.667-0.575-0.11-1.175-0.307-0.928-0.912-1.293 0.166-2.431 0.704-1.408 2.019h0.075zM4.22 12.726c0.069-0.475-0.512 0.094-0 0zM26.941 27.412c0.165-0.49-0.417 0.062 0 0zM24.474 26.133c0.412-0.379-0.525-0.117 0 0zM4.062 13.526c0.647-0.254-1.175-0.525-0.13-0.050zM2.538 12.615c-0.044-0.4-0.237 0.050 0 0zM2.263 12.823c-0.025-0.337-0.18 0.127 0 0zM4.12 14.028c-0.087-0.731-1.050-0.11 0-0zM7.719 16.687c0.152-0.14-0.362-0.104 0 0zM4.463 14.6c-0.15-0.121-0.117 0.152 0 0zM3.946 14.347c0.011-0.312-0.829-0.28 0 0zM3.041 14.119c-0.172-0.968-0.656-0.147-0 0zM6.836 16.754c0.011-0.509-0.396-0.019 0 0zM23.985 27.436c0.64-0.13 2.097 0.325 2.332-0.17-0.775-0.019-2.687-0.547-2.777 0.125l0.17 0.029zM6.378 16.639c-0.009-0.166-0.152 0.062 0 0zM4.933 15.939c0.499-0.169-0.459-0.112 0 0zM16.467 23.725c-0.009-0.501-0.494 0.125 0 0zM5.241 16.65c0.775-0.3-0.83-0.212 0 0zM20.249 26.297c0.27-0.2-0.337-0.025 0 0zM17.435 24.523c-0.050-0.194-0.196 0.037 0 0zM17.093 24.274c-0.135-0.347-0.535-0.008 0 0zM9.994 19.796c0-0.506-0.906-0.205 0 0zM9.174 19.606c-0.332-0.279-0.016-0.040 0 0zM3.771 16.275c0.115-0.479-1.066-2.633-0.557-1.080 0.182 0.325 0.162 0.942 0.557 1.080zM6.715 18.599c0.646 0.145 2.582 1.592 1.44 0.1-0.585-0.172-0.234-1.603-0.831-1.35 0.4 0.669 0.33 0.953-0.512 0.532-1.056-0.516-0.592 0.255-0.387 0.467-0.28 0.065 0.374 0.245 0.291 0.25zM22.891 29.012c0.482-0.322-0.586-0.104 0 0zM21.166 27.865c0.717-0.602-0.759 0.266-0 0zM21.503 28.028c0.881-0.637-0.535-0.122-0.185 0.12zM11.639 22.174c-0.181-0.371-0.28 0.059 0 0zM11.064 21.841c-0.025-0.3-0.364 0.025 0 0zM20.399 27.727c0.689-0.444-0.157-0.375-0.125 0.040zM6.272 18.818c0.204-0.302-0.525-0.039 0 0zM20.625 28.018c0.712-0.61-0.45-0.128 0-0zM19.543 27.593c1.418-0.917-0.582-0.4 0-0zM4.51 18.178c-0.657-0.937-0.409-1.36-1.043-2.124-0.12-0.587-1.087-1.916-0.5-0.507 0.537 0.823 0.697 2.098 1.543 2.632zM19.784 27.853c0.771-0.817-0.747 0.049 0 0zM19.783 28.115c0.004-0.187-0.3 0.082-0 0zM18.333 27.121c0.697-0.585-0.675 0.26-0 0zM11.964 23.185c0.452 0.4 2.077 0.295 0.55 0.050-0.227-0.337-1.438-0.255-0.55-0.050zM7.327 20.39c-0.302-0.502-1.080-0.455 0 0zM6.513 19.855c-0.125-0.491-0.875-0.487 0-0zM18.624 27.462c0.406-0.394 0.016 0.629 0.675-0.096 0.006-0.519-0.021-0.825-0.757-0.195-0.202 0.112-0.292 0.591 0.082 0.291zM17.861 27.141c0.025-0.35-0.241 0.3 0-0zM10.438 22.644c1.762 0.567-0.864-0.695 0-0zM8.988 21.811c0.425 0.316 1.6 0.898 0.605 0.12 0.336-0.39-0.642-0.597-0.317-0.857-0.825-0.505-0.65-0.46-0.072-0.445-0.992-0.442 0.142-0.41 0.087-0.637-0.381-0.075-1.899-0.675-1.005 0.050-0.907-0.462-0.216 0.172-0.49 0.105-0.928-0.252 0.825 0.706-0.147 0.469 0.531 0.421 1.432 1.080 0.225 0.446-0.16 0.229 0.862 0.575 1.115 0.75zM11.726 23.628c0.769 0.2 0.765-0.119 0.069-0.212-0.375-0.35-1.557-0.719-0.5-0.044 0.071 0.177 0.294 0.174 0.43 0.257zM10.339 22.928c-0.16-0.139 0.020 0.087-0-0zM11.013 9.666c0.117-0.144 0.025 0.174-0-0zM10.61 12.069c-0.27-0.475 0.34-2.091 0.407-1.087-0.284 0.781-0.081 1.218 0.116 0.17 0.366-0.825-0.079 1.628-0.525 0.918zM10.218 12.706c-0.066-0.4 0.225 0.505 0 0zM10.459 13.343c-0.393-0.97 0.365 0.512-0-0zM10.623 13.706c-0.003-0.209 0.054 0.302-0-0zM7.795 12.132c0.257-0.542 0.475 0.604-0-0zM6.793 11.535c0.161-0.069 0.085 0.215-0-0zM11.076 14.879c0.146-1.18 0.129 0.691-0-0zM7.234 12.625c0.211-0.31-0.562-1.4 0.111-0.391 0.29 0.231 0.84 0.387 0.354 0.484 0.762 0.674-0.187 0.182-0.465-0.092zM11.296 15.203c0.055-1.037 0.31-0.619 0.002 0.147zM6.848 12.985c0.519-0.11 2.147 0.911 0.65 0.292-0.165-0.185-0.52-0.1-0.65-0.293zM11.586 16.261c0.162-0.577 0.012 0.381 0 0zM9.484 14.913c-0.082-1.012 0.184 0.167 0 0zM6.715 13.444c-0.871-1.203 2.533 1.216 0.559 0.305-0.206-0.054-0.455-0.075-0.559-0.305zM11.521 16.702c0.067-0.275 0.009 0.322 0 0zM11.771 16.95c0.060-0.641 0.124 0.437-0 0zM10.334 16.1c-0.587-0.352-0.154-2.479 0.046-1.025 0.571-0.185-0.031 0.75 0.394 0.742-0.066 0.591-0.257 0.804-0.437 0.282zM6.448 13.841c-1.357-1.207 1.706 0.632 0.221 0.225zM7.319 14.674c-0.41-0.771 0.5 0.322 0 0zM6.881 14.533c0.271-0.269 0.144 0.265 0 0zM6.169 14.552c-0.467-0.462-0.805-0.891 0.021-0.287 0.319 0.012-0.707-0.972 0.075-0.312 0.825 0.15 0.409 1.352-0.096 0.6zM7.524 15.601c0.27-0.569 0.457 0.792 0 0zM6.961 15.408c0.050-0.754 0.287 0.516 0 0zM8.215 16.271c-0.262-0.448-0.417-0.987-0.417-1.562 0-0.001 0-0.002 0-0.003v0c0.095 0.472 1.005 2.033 0.446 0.647-0.617-1.162 0.737 0.377 0.877 0.667 0.062 0.287-0.381-0.079-0.080 0.597-0.55-0.771-0.325 0.425-0.826-0.347zM12.271 18.977c-0.44-0.987 0.312-0.54 0.097 0.162zM9.919 18.222c-0.194-0.347 0.404 0.325 0 0zM12.658 20.128c0.168-0.63 0.198 0.53 0 0zM8.78 18.026c0.274-0.075 0.135 0.467 0 0zM13.653 21.39c-0.465-0.9 0.587 0.255 0 0zM14.056 21.931c-0.012-0.585 0.134 0.45 0 0zM18.687 25.45c0.231-0.014 0.008 0.175 0 0zM14.64 22.879c-0.37-0.387-0.466-1.112-0.066-0.481 0.205 0.082 0.656 1.183 0.066 0.481zM15.883 26.388c0.966-0.577 0.647 1.352 1.638 0.162 0.977-0.712-0.843 0.883 0.362 0.129 0.87-0.584 2.157 0.275 2.969 0.556 0.585-0.029 1.153 0.506 1.753 0.181 1.153-0.312-2.257-0.462-1.362-1.012-0.138 0.031-0.297 0.049-0.46 0.049-0.805 0-1.509-0.435-1.89-1.082l-0.006-0.010c-1.299-0.215-2.402-0.92-3.136-1.914l-0.009-0.013c-0.24-0.394 0.35 0.055-0.207-0.587-0.606-0.61-1.123-1.311-1.527-2.079l-0.023-0.047c-0.571-0.305-0.637-1.203-0.696-0.030 0.005-0.741-0.691-1.24-0.86-1.032-0.002-0.714 0.744-0.356 0.22-0.884-0.112-0.74-0.482-1.512-0.594-2.346-0.172-0.402-0.025-1.263-0.591-0.352-0.206 0.962-0.069-1.183 0.252-0.475 0.421-0.725-0.15-0.637-0.175-0.537 0.275-0.61 0.175-1.475-0.071-1.145 0.146-0.646 0.231-2.377-0.219-2.069 0.272-0.675 0.517-3.090-0.667-2.169-0.62 0.025-1.202 0.159-1.736 0.382l0.033-0.012c1.232 0.679-0.125 0.245-0.625 0.137-0.065 0.627-0.562 0.356-1.182 0.362 0.991 0.122-0.482 1.012-1.051 0.667-0.737 0.352 0.637 1.233 0.015 1.506 0.075 0.41-1.131-0.15-1.037 0.8-0.716-0.301-0.097 1.125 0.261 0.642 1.218 0.33 0.857 1.082 0.887 1.796-0.197 0.416-0.98-0.978-0.175-0.914-0.634-1.033-0.701-0.375-1.23 0.106-0.125 0.035 1.348 0.684 0.425 1.003 0.812 0.125 0.835 0.837 1 1.287 0.487 0.509 0.387-0.562 0.973 0.050-0.37-0.545-1.958-1.535-0.68-1.217-0.006-0.55-0.231-0.991 0.161-0.98 0.387-0.702-0.406 1.733 0.469 0.84 0.241-0.106 0.3-0.704 0.737 0.056 0.631 0.622 0.227 1.072-0.664 0.504 0.159 0.541 1.192 0.734 0.998 1.581 0.206 0.744 0.494 0.47 0.745 0.427 0.197 0.722 0.309 0.191 0.319-0.154 0.9 0.194 0.69 0.725 0.972 1.1 0.621 0.28-0.89-1.902 0.177-0.657 1.122 1.012 0.421 1.437-0.587 1.275 0.637-0.051 0.844 0.862 1.641 0.83 0.727 0.346 1.218 1.675-0.034 1.121-0.435-0.391-1.974-0.875-0.716-0.13 1.282 0.525 2.335 1.039 3.35 1.611l-0.15-0.077c0.8 0.572 1.147 1.227 1.45 1.357-0.672 0.321-2.028-0.257-1.021-0.435-0.629-0.114-1.335-0.431-0.734 0.35 0.512 0.429 1.812 0.382 2.046 0.431-0.199 0.435-0.537 0.47 0.008 0.504-0.607 0.325 0.195 0.375 0.251 0.56zM12.289 24.179c1.033 0.132-1.231-0.704-0.226-0.075zM15.045 26.050c0.897-0.356-0.875-0.175 0 0zM9.746 22.754c0.575-0.062-0.925-0.389 0 0zM12.877 24.744c0.075-0.319-0.66-0.096 0 0zM17.456 27.709c-0.012-0.246-0.229 0.094 0 0zM13.25 25.129c-0.142-0.162-0.068 0.035 0 0zM6.493 20.836c-0.096-0.371-0.842-0.667 0 0zM9.067 22.501c0.775-0.046-1.060-0.341 0 0zM11.239 24.068c-0.080-0.239-0.42-0.010 0 0zM17.025 27.637c0.035-0.454-0.441 0.337 0 0zM8.94 22.657c-0.052-0.25-0.332 0.023 0 0zM14.743 26.356c1.35 0.012-1.218-0.184 0 0zM12.277 24.931c1.425 0.404-1.197-0.9-0.351-0.147l0.187 0.085 0.162 0.062zM13.507 25.91c0.241-0.412-1.018-0.237 0 0zM9.458 23.438c0.582 0.447 2.349 0.057 0.892-0.266-0.662-0.354-2.158-0.595-1.14 0.212zM12.687 25.653c0.537-0.202-0.87-0.204 0 0zM11.48 24.912c0.375-0.262-0.776-0.2 0 0zM10.043 24.075c-0.050-0.209-0.77-0.231 0 0zM14.943 27.892c0.496 0.312 2.899 0.687 1.393 0.129-0.25 0.052-2.787-0.717-1.395-0.129zM11.856 25.965c-0.017-0.207-0.22 0.094 0 0zM11.239 25.657c0.609-0.394-0.787-0.005 0 0zM13.947 27.548c0.239-0.352-0.762-0.134 0 0zM12.538 26.761c0.39-0.375-0.605-0.235 0 0zM11.714 26.417c-0.067-0.331-0.3 0.185 0 0zM11.056 26.177c0.269-0.12-0.387-0.15 0 0zM6.115 21.807c0.041-0.182 0.221 0.396 0 0zM9.606 25.64c1.212 0.449-0.005-0.852-0.562-0.777-0.245-0.426-0.938-0.696-0.45-0.925-0.88 0.305-0.921-1.162-1.337-0.953-0.93-0.294-0.362-1.337-1.47-1.974-0.101-0.675-1.102-1.26-1.422-2.277-0.141-0.52-1.131-2.016-0.522-0.625 0.648 1.386 1.378 2.579 2.221 3.68l-0.034-0.047c0.545 1.179 1.346 2.158 2.336 2.898l0.020 0.014c0.362 0.348 0.71 0.879 1.221 0.987zM11.985 27.322c1.11 0.571 2.398 1.016 3.753 1.268l0.088 0.014c1.303 0.299 2.799 0.47 4.336 0.47 0.798 0 1.586-0.046 2.36-0.136l-0.094 0.009c-0.987-0.446-2.009 0.175-2.993-0.319-0.35 0.040-0.756 0.062-1.167 0.062-0.879 0-1.734-0.103-2.553-0.298l0.075 0.015c-1.631-0.594-2.987-1.206-4.292-1.902l0.179 0.087c-1.596-0.582 0.825 0.747 1.256 0.856 0.997 0.566-1.096-0.291-1.392-0.526-0.835-0.469-0.942-0.371-0.082 0.105 0.174 0.1 0.345 0.207 0.525 0.294zM9.967 26.447c-1.228-0.845-2.28-1.828-3.171-2.945l-0.023-0.029c-1.676-2.057-3.041-4.451-3.971-7.051l-0.053-0.168c-0.557-1.693-0.75-3.509-1.467-5.136-0.145-0.266-0.23-0.583-0.23-0.92 0-0.972 0.711-1.779 1.641-1.928l0.011-0.001c0.575-0.109 1.59-0.652 0.366-0.264-1.097 0.805-1.203-0.731-0.079-0.827 0.489-0.005 0.884-0.402 0.884-0.892 0-0.147-0.036-0.286-0.099-0.409l0.002 0.005c-0.825-0.537 1.999-1.128 0.579-1.929-1.478-1.598 2.071-1.904 1.196-0.092-0.209 1.393 2.479-0.256 1.856 1.353 0.634 0.774 2.374 0.175 2.331 1.261 0.925 0.062 1.241 0.84 2.108 0.9 0.9 0.406 2.527 0.725 2.832 1.737-0.891 0.707-2.954-1.456-3.053 0.497 0.023 3.075 0.48 6.034 1.312 8.832l-0.057-0.225c0.67 1.664 1.62 3.085 2.804 4.271l-0-0c1.079 1.202 2.376 2.182 3.834 2.884l0.074 0.032c1.16 0.548 2.508 0.98 3.918 1.228l0.097 0.014c0.56-0.429 1.55-2.021 2.422-1.35 0.041 0.755-1.735 1.578-0.084 1.495 0.97-0.292 1.642 0.75 2.441-0.19 0.735 0.871 3.057-0.557 2.533 1.225-0.707 0.455-1.739 0.18-2.448 0.807-1.168-0.584-2.099 0.522-3.393 0.382-1.271 0.231-2.734 0.363-4.228 0.363-0.044 0-0.089-0-0.133-0l0.007 0c-2.548-0.045-4.986-0.444-7.29-1.149l0.187 0.049c-1.394-0.471-2.603-1.091-3.7-1.86l0.046 0.031z'
        fill='#ffffff'
      />
    </svg>
  )
}

export const PostgreSqlIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      className={className}
      xmlns='http://www.w3.org/2000/svg'
      xmlSpace='preserve'
      viewBox='0 0 432.071 445.383'
    >
      <g
        style={{
          fillRule: 'nonzero',
          clipRule: 'nonzero',
          fill: 'none',
          stroke: '#fff',
          strokeWidth: '12.4651',
          strokeLinecap: 'round',
          strokeLinejoin: 'round',
          strokeMiterlimit: '4',
        }}
      >
        <path
          d='M323.205 324.227c2.833-23.601 1.984-27.062 19.563-23.239l4.463.392c13.517.615 31.199-2.174 41.587-7 22.362-10.376 35.622-27.7 13.572-23.148-50.297 10.376-53.755-6.655-53.755-6.655 53.111-78.803 75.313-178.836 56.149-203.322-52.27-66.789-142.748-35.206-144.262-34.386l-.482.089c-9.938-2.062-21.06-3.294-33.554-3.496-22.761-.374-40.032 5.967-53.133 15.904 0 0-161.408-66.498-153.899 83.628 1.597 31.936 45.777 241.655 98.47 178.31 19.259-23.163 37.871-42.748 37.871-42.748 9.242 6.14 20.307 9.272 31.912 8.147l.897-.765c-.281 2.876-.157 5.689.359 9.019-13.572 15.167-9.584 17.83-36.723 23.416-27.457 5.659-11.326 15.734-.797 18.367 12.768 3.193 42.305 7.716 62.268-20.224l-.795 3.188c5.325 4.26 4.965 30.619 5.72 49.452.756 18.834 2.017 36.409 5.856 46.771 3.839 10.36 8.369 37.05 44.036 29.406 29.809-6.388 52.6-15.582 54.677-101.107'
          style={{
            fill: '#000',
            stroke: '#000',
            strokeWidth: '37.3953',
            strokeLinecap: 'butt',
            strokeLinejoin: 'miter',
          }}
        />
        <path
          stroke='none'
          d='M402.395 271.23c-50.302 10.376-53.76-6.655-53.76-6.655 53.111-78.808 75.313-178.843 56.153-203.326-52.27-66.785-142.752-35.2-144.262-34.38l-.486.087c-9.938-2.063-21.06-3.292-33.56-3.496-22.761-.373-40.026 5.967-53.127 15.902 0 0-161.411-66.495-153.904 83.63 1.597 31.938 45.776 241.657 98.471 178.312 19.26-23.163 37.869-42.748 37.869-42.748 9.243 6.14 20.308 9.272 31.908 8.147l.901-.765c-.28 2.876-.152 5.689.361 9.019-13.575 15.167-9.586 17.83-36.723 23.416-27.459 5.659-11.328 15.734-.796 18.367 12.768 3.193 42.307 7.716 62.266-20.224l-.796 3.188c5.319 4.26 9.054 27.711 8.428 48.969-.626 21.259-1.044 35.854 3.147 47.254 4.191 11.4 8.368 37.05 44.042 29.406 29.809-6.388 45.256-22.942 47.405-50.555 1.525-19.631 4.976-16.729 5.194-34.28l2.768-8.309c3.192-26.611.507-35.196 18.872-31.203l4.463.392c13.517.615 31.208-2.174 41.591-7 22.358-10.376 35.618-27.7 13.573-23.148z'
          style={{ fill: '#336791', stroke: 'none' }}
        />
        <path d='M215.866 286.484c-1.385 49.516.348 99.377 5.193 111.495 4.848 12.118 15.223 35.688 50.9 28.045 29.806-6.39 40.651-18.756 45.357-46.051 3.466-20.082 10.148-75.854 11.005-87.281M173.104 38.256S11.583-27.76 19.092 122.365c1.597 31.938 45.779 241.664 98.473 178.316 19.256-23.166 36.671-41.335 36.671-41.335M260.349 26.207c-5.591 1.753 89.848-34.889 144.087 34.417 19.159 24.484-3.043 124.519-56.153 203.329' />
        <path
          d='M348.282 263.953s3.461 17.036 53.764 6.653c22.04-4.552 8.776 12.774-13.577 23.155-18.345 8.514-59.474 10.696-60.146-1.069-1.729-30.355 21.647-21.133 19.96-28.739-1.525-6.85-11.979-13.573-18.894-30.338-6.037-14.633-82.796-126.849 21.287-110.183 3.813-.789-27.146-99.002-124.553-100.599-97.385-1.597-94.19 119.762-94.19 119.762'
          style={{ strokeLinejoin: 'bevel' }}
        />
        <path d='M188.604 274.334c-13.577 15.166-9.584 17.829-36.723 23.417-27.459 5.66-11.326 15.733-.797 18.365 12.768 3.195 42.307 7.718 62.266-20.229 6.078-8.509-.036-22.086-8.385-25.547-4.034-1.671-9.428-3.765-16.361 3.994z' />
        <path d='M187.715 274.069c-1.368-8.917 2.93-19.528 7.536-31.942 6.922-18.626 22.893-37.255 10.117-96.339-9.523-44.029-73.396-9.163-73.436-3.193-.039 5.968 2.889 30.26-1.067 58.548-5.162 36.913 23.488 68.132 56.479 64.938' />
        <path
          d='M172.517 141.7c-.288 2.039 3.733 7.48 8.976 8.207 5.234.73 9.714-3.522 9.998-5.559.284-2.039-3.732-4.285-8.977-5.015-5.237-.731-9.719.333-9.996 2.367z'
          style={{
            fill: '#fff',
            strokeWidth: '4.155',
            strokeLinecap: 'butt',
            strokeLinejoin: 'miter',
          }}
        />
        <path
          d='M331.941 137.543c.284 2.039-3.732 7.48-8.976 8.207-5.238.73-9.718-3.522-10.005-5.559-.277-2.039 3.74-4.285 8.979-5.015 5.239-.73 9.718.333 10.002 2.368z'
          style={{
            fill: '#fff',
            strokeWidth: '2.0775',
            strokeLinecap: 'butt',
            strokeLinejoin: 'miter',
          }}
        />
        <path d='M350.676 123.432c.863 15.994-3.445 26.888-3.988 43.914-.804 24.748 11.799 53.074-7.191 81.435' />
      </g>
    </svg>
  )
}

export const AstroIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      className={className}
      viewBox='0 0 256 366'
      xmlns='http://www.w3.org/2000/svg'
      width='256'
      height='366'
      preserveAspectRatio='xMidYMid'
    >
      <path
        fill='#fff'
        d='M182.022 9.147c2.982 3.702 4.502 8.697 7.543 18.687L256 246.074a276.467 276.467 0 0 0-79.426-26.891L133.318 73.008a5.63 5.63 0 0 0-10.802.017L79.784 219.11A276.453 276.453 0 0 0 0 246.04L66.76 27.783c3.051-9.972 4.577-14.959 7.559-18.654a24.541 24.541 0 0 1 9.946-7.358C88.67 0 93.885 0 104.314 0h47.683c10.443 0 15.664 0 20.074 1.774a24.545 24.545 0 0 1 9.95 7.373Z'
      />
      <path
        fill='#FF5D01'
        d='M189.972 256.46c-10.952 9.364-32.812 15.751-57.992 15.751-30.904 0-56.807-9.621-63.68-22.56-2.458 7.415-3.009 15.903-3.009 21.324 0 0-1.619 26.623 16.898 45.14 0-9.615 7.795-17.41 17.41-17.41 16.48 0 16.46 14.378 16.446 26.043l-.001 1.041c0 17.705 10.82 32.883 26.21 39.28a35.685 35.685 0 0 1-3.588-15.647c0-16.886 9.913-23.173 21.435-30.48 9.167-5.814 19.353-12.274 26.372-25.232a47.588 47.588 0 0 0 5.742-22.735c0-5.06-.786-9.938-2.243-14.516Z'
      />
    </svg>
  )
}

export const VercelIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      className={className}
      viewBox='0 0 256 222'
      width='256'
      height='222'
      xmlns='http://www.w3.org/2000/svg'
      preserveAspectRatio='xMidYMid'
    >
      <path fill='#fff' d='m128 0 128 221.705H0z' />
    </svg>
  )
}

export const SvelteIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      className={className}
      viewBox='0 0 256 308'
      width='256'
      height='308'
      xmlns='http://www.w3.org/2000/svg'
      preserveAspectRatio='xMidYMid'
    >
      <path
        d='M239.682 40.707C211.113-.182 154.69-12.301 113.895 13.69L42.247 59.356a82.198 82.198 0 0 0-37.135 55.056 86.566 86.566 0 0 0 8.536 55.576 82.425 82.425 0 0 0-12.296 30.719 87.596 87.596 0 0 0 14.964 66.244c28.574 40.893 84.997 53.007 125.787 27.016l71.648-45.664a82.182 82.182 0 0 0 37.135-55.057 86.601 86.601 0 0 0-8.53-55.577 82.409 82.409 0 0 0 12.29-30.718 87.573 87.573 0 0 0-14.963-66.244'
        fill='#FF3E00'
      />
      <path
        d='M106.889 270.841c-23.102 6.007-47.497-3.036-61.103-22.648a52.685 52.685 0 0 1-9.003-39.85 49.978 49.978 0 0 1 1.713-6.693l1.35-4.115 3.671 2.697a92.447 92.447 0 0 0 28.036 14.007l2.663.808-.245 2.659a16.067 16.067 0 0 0 2.89 10.656 17.143 17.143 0 0 0 18.397 6.828 15.786 15.786 0 0 0 4.403-1.935l71.67-45.672a14.922 14.922 0 0 0 6.734-9.977 15.923 15.923 0 0 0-2.713-12.011 17.156 17.156 0 0 0-18.404-6.832 15.78 15.78 0 0 0-4.396 1.933l-27.35 17.434a52.298 52.298 0 0 1-14.553 6.391c-23.101 6.007-47.497-3.036-61.101-22.649a52.681 52.681 0 0 1-9.004-39.849 49.428 49.428 0 0 1 22.34-33.114l71.664-45.677a52.218 52.218 0 0 1 14.563-6.398c23.101-6.007 47.497 3.036 61.101 22.648a52.685 52.685 0 0 1 9.004 39.85 50.559 50.559 0 0 1-1.713 6.692l-1.35 4.116-3.67-2.693a92.373 92.373 0 0 0-28.037-14.013l-2.664-.809.246-2.658a16.099 16.099 0 0 0-2.89-10.656 17.143 17.143 0 0 0-18.398-6.828 15.786 15.786 0 0 0-4.402 1.935l-71.67 45.674a14.898 14.898 0 0 0-6.73 9.975 15.9 15.9 0 0 0 2.709 12.012 17.156 17.156 0 0 0 18.404 6.832 15.841 15.841 0 0 0 4.402-1.935l27.345-17.427a52.147 52.147 0 0 1 14.552-6.397c23.101-6.006 47.497 3.037 61.102 22.65a52.681 52.681 0 0 1 9.003 39.848 49.453 49.453 0 0 1-22.34 33.12l-71.664 45.673a52.218 52.218 0 0 1-14.563 6.398'
        fill='#FFF'
      />
    </svg>
  )
}

export const StripeIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      className={className}
      xmlns='http://www.w3.org/2000/svg'
      width='76.57'
      height='32'
      viewBox='0 0 512 214'
    >
      <path
        fill='#635BFF'
        d='M512 110.08c0-36.409-17.636-65.138-51.342-65.138c-33.85 0-54.33 28.73-54.33 64.854c0 42.808 24.179 64.426 58.88 64.426c16.925 0 29.725-3.84 39.396-9.244v-28.445c-9.67 4.836-20.764 7.823-34.844 7.823c-13.796 0-26.027-4.836-27.591-21.618h69.547c0-1.85.284-9.245.284-12.658m-70.258-13.511c0-16.071 9.814-22.756 18.774-22.756c8.675 0 17.92 6.685 17.92 22.756zm-90.31-51.627c-13.939 0-22.899 6.542-27.876 11.094l-1.85-8.818h-31.288v165.83l35.555-7.537l.143-40.249c5.12 3.698 12.657 8.96 25.173 8.96c25.458 0 48.64-20.48 48.64-65.564c-.142-41.245-23.609-63.716-48.498-63.716m-8.534 97.991c-8.391 0-13.37-2.986-16.782-6.684l-.143-52.765c3.698-4.124 8.818-6.968 16.925-6.968c12.942 0 21.902 14.506 21.902 33.137c0 19.058-8.818 33.28-21.902 33.28M241.493 36.551l35.698-7.68V0l-35.698 7.538zm0 10.809h35.698v124.444h-35.698zm-38.257 10.524L200.96 47.36h-30.72v124.444h35.556V87.467c8.39-10.951 22.613-8.96 27.022-7.396V47.36c-4.551-1.707-21.191-4.836-29.582 10.524m-71.112-41.386l-34.702 7.395l-.142 113.92c0 21.05 15.787 36.551 36.836 36.551c11.662 0 20.195-2.133 24.888-4.693V140.8c-4.55 1.849-27.022 8.391-27.022-12.658V77.653h27.022V47.36h-27.022zM35.982 83.484c0-5.546 4.551-7.68 12.09-7.68c10.808 0 24.461 3.272 35.27 9.103V51.484c-11.804-4.693-23.466-6.542-35.27-6.542C19.2 44.942 0 60.018 0 85.192c0 39.252 54.044 32.995 54.044 49.92c0 6.541-5.688 8.675-13.653 8.675c-11.804 0-26.88-4.836-38.827-11.378v33.849c13.227 5.689 26.596 8.106 38.827 8.106c29.582 0 49.92-14.648 49.92-40.106c-.142-42.382-54.329-34.845-54.329-50.774'
      />
    </svg>
  )
}

export const StrapiIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      className={className}
      viewBox='0 0 256 256'
      xmlns='http://www.w3.org/2000/svg'
      width='256'
      height='256'
      preserveAspectRatio='xMidYMid'
    >
      <path
        fill='#4945FF'
        d='M0 88.747c0-41.836 0-62.754 12.997-75.75C25.993 0 46.91 0 88.747 0h78.507c41.835 0 62.752 0 75.75 12.997C256 25.993 256 46.91 256 88.747v78.507c0 41.835 0 62.752-12.997 75.75C230.006 256 209.09 256 167.253 256H88.748c-41.836 0-62.754 0-75.75-12.997C0 230.006 0 209.09 0 167.253V88.748Z'
      />
      <path
        fill='#FFF'
        d='M176.64 77.653H90.453V121.6H134.4v43.946h43.946V79.36c0-.943-.764-1.707-1.706-1.707Z'
      />
      <path fill='#FFF' d='M132.693 121.6h1.707v1.707h-1.707z' />
      <path
        fill='#9593FF'
        d='M90.453 121.6h42.24c.943 0 1.707.764 1.707 1.706v42.24H92.16a1.706 1.706 0 0 1-1.707-1.706V121.6ZM134.4 165.546h43.946l-42.49 42.49c-.537.538-1.456.157-1.456-.602v-41.888ZM90.453 121.6H48.566c-.76 0-1.14-.92-.603-1.457l42.49-42.49V121.6Z'
      />
    </svg>
  )
}

export const HeroUIIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      className={className}
      viewBox='0 0 74 74'
      xmlns='http://www.w3.org/2000/svg'
      width='74'
      height='74'
      fill='none'
    >
      <path
        fill='#ffff'
        d='M54.35.083H19.566C8.76.083 0 8.843 0 19.649v34.783C0 65.239 8.76 74 19.566 74H54.35c10.806 0 19.566-8.76 19.566-19.566V19.648C73.916 8.843 65.156.083 54.35.083Z'
      />
      <path
        fill='#111'
        d='M50.638 52.566V21.201h3.877v31.365h-3.877ZM31.731 53.22c-2.425 0-4.567-.501-6.425-1.503a11.087 11.087 0 0 1-4.378-4.204c-1.046-1.815-1.569-3.942-1.569-6.382V21.223l3.921-.022v19.604c0 1.48.247 2.773.74 3.877.509 1.089 1.177 1.996 2.005 2.722a8.61 8.61 0 0 0 2.722 1.634 9.039 9.039 0 0 0 2.984.523 8.773 8.773 0 0 0 3.006-.545 8.5 8.5 0 0 0 2.723-1.612c.827-.726 1.488-1.64 1.982-2.744.493-1.104.74-2.389.74-3.855V21.2h3.921v19.93c0 2.425-.53 4.545-1.59 6.36a10.893 10.893 0 0 1-4.356 4.226c-1.859 1.002-4 1.503-6.426 1.503Z'
      />
    </svg>
  )
}

export const TanstackIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      className={className}
      xmlns='http://www.w3.org/2000/svg'
      xmlnsXlink='http://www.w3.org/1999/xlink'
      viewBox='0 0 633 633'
    >
      <defs>
        <linearGradient id='tanstack__b' x1='50%' x2='50%' y1='0%' y2='71.65%'>
          <stop offset='0%' stopColor='#6BDAFF' />
          <stop offset='31.922%' stopColor='#F9FFB5' />
          <stop offset='70.627%' stopColor='#FFA770' />
          <stop offset='100%' stopColor='#FF7373' />
        </linearGradient>
        <linearGradient
          id='tanstack__d'
          x1='43.996%'
          x2='53.441%'
          y1='8.54%'
          y2='93.872%'
        >
          <stop offset='0%' stopColor='#673800' />
          <stop offset='100%' stopColor='#B65E00' />
        </linearGradient>
        <linearGradient id='tanstack__e' x1='50%' x2='50%' y1='0%' y2='100%'>
          <stop offset='0%' stopColor='#2F8A00' />
          <stop offset='100%' stopColor='#90FF57' />
        </linearGradient>
        <linearGradient id='tanstack__f' x1='50%' x2='50%' y1='0%' y2='100%'>
          <stop offset='0%' stopColor='#2F8A00' />
          <stop offset='100%' stopColor='#90FF57' />
        </linearGradient>
        <linearGradient id='tanstack__g' x1='50%' x2='50%' y1='0%' y2='100%'>
          <stop offset='0%' stopColor='#2F8A00' />
          <stop offset='100%' stopColor='#90FF57' />
        </linearGradient>
        <linearGradient id='tanstack__h' x1='50%' x2='50%' y1='0%' y2='100%'>
          <stop offset='0%' stopColor='#2F8A00' />
          <stop offset='100%' stopColor='#90FF57' />
        </linearGradient>
        <linearGradient id='tanstack__i' x1='50%' x2='50%' y1='0%' y2='100%'>
          <stop offset='0%' stopColor='#2F8A00' />
          <stop offset='100%' stopColor='#90FF57' />
        </linearGradient>
        <linearGradient id='tanstack__j' x1='50%' x2='50%' y1='0%' y2='100%'>
          <stop offset='0%' stopColor='#2F8A00' />
          <stop offset='100%' stopColor='#90FF57' />
        </linearGradient>
        <linearGradient
          id='tanstack__k'
          x1='92.9%'
          x2='8.641%'
          y1='45.768%'
          y2='54.892%'
        >
          <stop offset='0%' stopColor='#EE2700' />
          <stop offset='100%' stopColor='#FF008E' />
        </linearGradient>
        <linearGradient
          id='tanstack__l'
          x1='61.109%'
          x2='43.717%'
          y1='3.633%'
          y2='43.072%'
        >
          <stop offset='0%' stopColor='#FFF400' />
          <stop offset='100%' stopColor='#3C8700' />
        </linearGradient>
        <linearGradient id='tanstack__m' x1='50%' x2='50%' y1='0%' y2='100%'>
          <stop offset='0%' stopColor='#FFDF00' />
          <stop offset='100%' stopColor='#FF9D00' />
        </linearGradient>
        <linearGradient
          id='tanstack__n'
          x1='127.279%'
          x2='0%'
          y1='49.778%'
          y2='50.222%'
        >
          <stop offset='0%' stopColor='#FFA400' />
          <stop offset='100%' stopColor='#FF5E00' />
        </linearGradient>
        <linearGradient
          id='tanstack__o'
          x1='127.279%'
          x2='0%'
          y1='47.531%'
          y2='52.469%'
        >
          <stop offset='0%' stopColor='#FFA400' />
          <stop offset='100%' stopColor='#FF5E00' />
        </linearGradient>
        <linearGradient
          id='tanstack__p'
          x1='127.279%'
          x2='0%'
          y1='46.195%'
          y2='53.805%'
        >
          <stop offset='0%' stopColor='#FFA400' />
          <stop offset='100%' stopColor='#FF5E00' />
        </linearGradient>
        <linearGradient
          id='tanstack__q'
          x1='127.279%'
          x2='0%'
          y1='35.33%'
          y2='64.67%'
        >
          <stop offset='0%' stopColor='#FFA400' />
          <stop offset='100%' stopColor='#FF5E00' />
        </linearGradient>
        <linearGradient
          id='tanstack__r'
          x1='127.279%'
          x2='0%'
          y1='4.875%'
          y2='95.125%'
        >
          <stop offset='0%' stopColor='#FFA400' />
          <stop offset='100%' stopColor='#FF5E00' />
        </linearGradient>
        <linearGradient
          id='tanstack__s'
          x1='78.334%'
          x2='31.668%'
          y1='0%'
          y2='100%'
        >
          <stop offset='0%' stopColor='#FFA400' />
          <stop offset='100%' stopColor='#FF5E00' />
        </linearGradient>
        <linearGradient
          id='tanstack__t'
          x1='57.913%'
          x2='44.88%'
          y1='0%'
          y2='100%'
        >
          <stop offset='0%' stopColor='#FFA400' />
          <stop offset='100%' stopColor='#FF5E00' />
        </linearGradient>
        <linearGradient
          id='tanstack__u'
          x1='50.495%'
          x2='49.68%'
          y1='0%'
          y2='100%'
        >
          <stop offset='0%' stopColor='#FFA400' />
          <stop offset='100%' stopColor='#FF5E00' />
        </linearGradient>
        <circle id='tanstack__a' cx='308.5' cy='308.5' r='308.5' />
        <circle id='tanstack__v' cx='307.5' cy='308.5' r='316.5' />
      </defs>
      <g fill='none' fillRule='evenodd' transform='translate(9 8)'>
        <mask id='tanstack__c' fill='#fff'>
          <use xlinkHref='#tanstack__a' />
        </mask>
        <use xlinkHref='#tanstack__a' fill='url(#tanstack__b)' />
        <ellipse
          cx='81.5'
          cy='602.5'
          fill='#015064'
          stroke='#00CFE2'
          strokeWidth='25'
          mask='url(#tanstack__c)'
          rx='214.5'
          ry='185.968'
        />
        <ellipse
          cx='535.5'
          cy='602.5'
          fill='#015064'
          stroke='#00CFE2'
          strokeWidth='25'
          mask='url(#tanstack__c)'
          rx='214.5'
          ry='185.968'
        />
        <ellipse
          cx='81.5'
          cy='640.5'
          fill='#015064'
          stroke='#00A8B8'
          strokeWidth='25'
          mask='url(#tanstack__c)'
          rx='214.5'
          ry='185.968'
        />
        <ellipse
          cx='535.5'
          cy='640.5'
          fill='#015064'
          stroke='#00A8B8'
          strokeWidth='25'
          mask='url(#tanstack__c)'
          rx='214.5'
          ry='185.968'
        />
        <ellipse
          cx='81.5'
          cy='676.5'
          fill='#015064'
          stroke='#007782'
          strokeWidth='25'
          mask='url(#tanstack__c)'
          rx='214.5'
          ry='185.968'
        />
        <ellipse
          cx='535.5'
          cy='676.5'
          fill='#015064'
          stroke='#007782'
          strokeWidth='25'
          mask='url(#tanstack__c)'
          rx='214.5'
          ry='185.968'
        />
        <g mask='url(#tanstack__c)'>
          <path
            fill='url(#tanstack__d)'
            stroke='#6E3A00'
            strokeWidth='6.088'
            d='M98.318 88.007c7.691 37.104 16.643 72.442 26.856 106.013 10.212 33.571 25.57 68.934 46.07 106.088l-51.903 11.67c-10.057-60.01-17.232-99.172-21.525-117.487-4.293-18.315-10.989-51.434-20.089-99.357l20.591-6.927'
            transform='scale(-1 1) rotate(25 -300.37 -553.013)'
          />
          <g stroke='#2F8A00'>
            <path
              fill='url(#tanstack__e)'
              strokeWidth='9.343'
              d='M108.544 66.538s-13.54-21.305-37.417-27.785c-15.917-4.321-33.933.31-54.048 13.892C33.464 65.975 47.24 73.52 58.405 75.28c16.749 2.64 50.14-8.74 50.14-8.74Z'
              transform='rotate(1 -6061.691 5926.397)'
            />
            <path
              fill='url(#tanstack__f)'
              strokeWidth='9.343'
              d='M108.544 67.138s-47.187-5.997-81.077 19.936C4.873 104.362-3.782 137.794 1.502 187.369c28.42-29.22 48.758-50.836 61.016-64.846 18.387-21.016 46.026-55.385 46.026-55.385Z'
              transform='rotate(1 -6061.691 5926.397)'
            />
            <path
              fill='url(#tanstack__g)'
              strokeWidth='9.343'
              d='M108.544 66.538c-1.96-21.705 3.98-38.018 17.82-48.94C140.203 6.674 154.85.808 170.303 0c-4.865 21.527-12.373 36.314-22.524 44.361-10.151 8.048-23.23 15.44-39.236 22.177Z'
              transform='rotate(1 -6061.691 5926.397)'
            />
            <path
              fill='url(#tanstack__h)'
              strokeWidth='9.343'
              d='M108.544 67.138c29.838-31.486 61.061-42.776 93.669-33.869C234.82 42.176 253.749 60.785 259 89.096c-34.898-3.657-59.974-6.343-75.228-8.058-15.254-1.716-40.33-6.349-75.228-13.9Z'
              transform='rotate(1 -6061.691 5926.397)'
            />
            <path
              fill='url(#tanstack__i)'
              strokeWidth='9.343'
              d='M108.544 67.138c34.868-9.381 64.503-3.658 88.905 17.17 24.402 20.829 39.656 46.686 45.762 77.571-39.626-7.574-68.4-20.115-86.322-37.624a395.051 395.051 0 0 1-48.345-57.117Z'
              transform='rotate(1 -6061.691 5926.397)'
            />
            <path
              fill='url(#tanstack__j)'
              strokeWidth='9.343'
              d='M108.544 67.138C76.206 82.6 57.608 105.366 52.75 135.436c-4.858 30.07-.292 62.89 13.698 98.462 24.873-41.418 38.905-71.368 42.096-89.849 3.191-18.48 3.191-44.118 0-76.91Z'
              transform='rotate(1 -6061.691 5926.397)'
            />
            <path
              strokeLinecap='round'
              strokeWidth='5.91'
              d='M211.284 173.477c-13.851 21.992-23.291 42.022-28.32 60.093-5.03 18.071-8.175 33.143-9.436 45.216'
            />
            <path
              strokeLinecap='round'
              d='M209.814 176.884c-23.982 2.565-42.792 10.469-56.428 23.714-13.639 13.245-23.483 26.136-29.536 38.674M219.045 167.299c29.028-7.723 50.972-10.173 65.831-7.352 14.859 2.822 26.807 7.659 35.842 14.51M211.31 172.618c20.29 9.106 38.353 19.052 54.186 29.837 15.833 10.786 27.714 20.99 35.643 30.617'
            />
          </g>
          <path
            stroke='#830305'
            strokeLinecap='round'
            strokeLinejoin='bevel'
            strokeWidth='6.937'
            d='m409.379 398.157-23.176 18.556M328.04 375.516l-22.313 28.398M312.904 353.698l53.18 59.816'
          />
          <path
            fill='url(#tanstack__k)'
            d='M67.585 27.463H5.68C1.893 28.148 0 30.38 0 34.16c0 3.78 1.893 6.211 5.68 7.293h67.17l41.751-30.356c2.488-2.646 2.794-5.315.92-8.006s-4.6-3.626-8.177-2.803l-39.76 27.174Z'
            transform='scale(-1 1) rotate(-9 2092.128 2856.854)'
          />
          <path
            fill='#D8D8D8'
            stroke='#FFF'
            strokeLinecap='round'
            strokeLinejoin='bevel'
            strokeWidth='4.414'
            d='m402.861 391.51.471-4.088M382.21 388.752l.472-4.087M361.546 385.404l.485-3.845M337.59 371.883l2.56-2.498M324.276 359.567l2.56-2.497'
          />
        </g>
        <ellipse
          cx='308.5'
          cy='720.5'
          fill='url(#tanstack__l)'
          mask='url(#tanstack__c)'
          rx='266'
          ry='316.5'
        />
        <ellipse
          cx='308.5'
          cy='720.5'
          stroke='#6DA300'
          strokeOpacity='.502'
          strokeWidth='26'
          mask='url(#tanstack__c)'
          rx='253'
          ry='303.5'
        />
        <g mask='url(#tanstack__c)'>
          <g transform='translate(389 -32)'>
            <circle cx='168.5' cy='113.5' r='113.5' fill='url(#tanstack__m)' />
            <circle
              cx='168.5'
              cy='113.5'
              r='106'
              stroke='#FFC900'
              strokeOpacity='.529'
              strokeWidth='15'
            />
            <path
              stroke='url(#tanstack__n)'
              strokeLinecap='round'
              strokeLinejoin='bevel'
              strokeWidth='12'
              d='M30 113H0'
            />
            <path
              stroke='url(#tanstack__o)'
              strokeLinecap='round'
              strokeLinejoin='bevel'
              strokeWidth='12'
              d='M33.5 79.5 7 74'
            />
            <path
              stroke='url(#tanstack__p)'
              strokeLinecap='round'
              strokeLinejoin='bevel'
              strokeWidth='12'
              d='m34 146-29 8'
            />
            <path
              stroke='url(#tanstack__q)'
              strokeLinecap='round'
              strokeLinejoin='bevel'
              strokeWidth='12'
              d='m45 177-24 13'
            />
            <path
              stroke='url(#tanstack__r)'
              strokeLinecap='round'
              strokeLinejoin='bevel'
              strokeWidth='12'
              d='m67 204-20 19'
            />
            <path
              stroke='url(#tanstack__s)'
              strokeLinecap='round'
              strokeLinejoin='bevel'
              strokeWidth='12'
              d='m94.373 227-13.834 22.847'
            />
            <path
              stroke='url(#tanstack__t)'
              strokeLinecap='round'
              strokeLinejoin='bevel'
              strokeWidth='12'
              d='M127.5 243.5 120 268'
            />
            <path
              stroke='url(#tanstack__u)'
              strokeLinecap='round'
              strokeLinejoin='bevel'
              strokeWidth='12'
              d='m167.5 252.5.5 24.5'
            />
          </g>
        </g>
        <circle cx='307.5' cy='308.5' r='304' stroke='#000' strokeWidth='25' />
      </g>
    </svg>
  )
}

export const MarkdownIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      viewBox='0 0 208 128'
      xmlns='http://www.w3.org/2000/svg'
      xmlSpace='preserve'
      className={className}
    >
      <path
        fill='none'
        stroke='#FFF'
        strokeWidth='10'
        d='M15 5h178a10 10 0 0 1 10 10v98a10 10 0 0 1-10 10H15a10 10 0 0 1-10-10V15A10 10 0 0 1 15 5z'
      />
      <path
        fill='#FFF'
        d='M30 98V30h20l20 25 20-25h20v68H90V59L70 84 50 59v39H30zm125 0-30-33h20V30h20v35h20l-30 33z'
      />
    </svg>
  )
}

export const DrizzleORMIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      className={className}
      xmlns='http://www.w3.org/2000/svg'
      width='160'
      height='160'
      fill='none'
      viewBox='0 0 160 160'
    >
      <rect
        width='9.631'
        height='40.852'
        fill='#C5F74F'
        rx='4.816'
        transform='matrix(.87303 .48767 -.49721 .86763 43.48 67.304)'
      />
      <rect
        width='9.631'
        height='40.852'
        fill='#C5F74F'
        rx='4.816'
        transform='matrix(.87303 .48767 -.49721 .86763 76.94 46.534)'
      />
      <rect
        width='9.631'
        height='40.852'
        fill='#C5F74F'
        rx='4.816'
        transform='matrix(.87303 .48767 -.49721 .86763 128.424 46.535)'
      />
      <rect
        width='9.631'
        height='40.852'
        fill='#C5F74F'
        rx='4.816'
        transform='matrix(.87303 .48767 -.49721 .86763 94.957 67.304)'
      />
    </svg>
  )
}

export const FastAPIIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      className={className}
      xmlns='http://www.w3.org/2000/svg'
      preserveAspectRatio='xMidYMid'
      viewBox='0 0 256 256'
    >
      <path
        d='M128 0C57.33 0 0 57.33 0 128s57.33 128 128 128 128-57.33 128-128S198.67 0 128 0Zm-6.67 230.605v-80.288H76.699l64.128-124.922v80.288h42.966L121.33 230.605Z'
        fill='#009688'
      />
    </svg>
  )
}

export const TauriIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      className={className}
      xmlns='http://www.w3.org/2000/svg'
      width='256'
      height='289'
      preserveAspectRatio='xMidYMid'
      viewBox='0 0 256 289'
    >
      <path
        fill='#FFC131'
        d='M178.497 104.93c0 15.155-12.285 27.44-27.44 27.44-15.153 0-27.438-12.285-27.438-27.44 0-15.153 12.285-27.438 27.439-27.438s27.439 12.285 27.439 27.439Z'
      />
      <circle
        cx='104.911'
        cy='183.505'
        r='27.439'
        fill='#24C8DB'
        transform='rotate(180 104.91 183.505)'
      />
      <path
        fill='#FFC131'
        d='M207.93 192.86a104.766 104.766 0 0 1-36.168 14.717 73.586 73.586 0 0 0 3.617-33.176c29.953-10.472 49.82-38.964 49.292-70.69-.53-31.727-21.336-59.542-51.622-69.008-30.286-9.467-63.23 1.546-81.733 27.324a122.227 122.227 0 0 0-40.16 11.723C64.86 29.536 105.956-.445 152.244.005c46.288.45 86.794 31.224 99.636 75.697 12.841 44.473-5.026 92.103-43.95 117.157ZM52.404 92.832l25.693 3.118a73.586 73.586 0 0 1 3.243-14.593 104.766 104.766 0 0 0-28.936 11.475Z'
      />
      <path
        fill='#24C8DB'
        d='M47.913 95.577a104.766 104.766 0 0 1 36.419-14.842 73.46 73.46 0 0 0-4.116 33.3c-29.847 10.619-49.549 39.148-48.906 70.822.642 31.673 21.484 59.38 51.738 68.78 30.253 9.399 63.127-1.62 81.604-27.352a122.227 122.227 0 0 0 40.16-11.6C191.076 258.854 150 288.785 103.748 288.33c-46.252-.453-86.733-31.184-99.602-75.612-12.87-44.427 4.92-92.037 43.768-117.141Zm155.528 100.026-.5.25.5-.25Z'
      />
    </svg>
  )
}

export const CSSICon = ({ className }: { className?: string }) => {
  return (
    <svg
      className={className}
      xmlns='http://www.w3.org/2000/svg'
      width='1000'
      height='1000'
      aria-labelledby='css-logo-title css-logo-description'
      viewBox='0 0 1000 1000'
    >
      <path
        fill='#639'
        d='M0 0h840a160 160 0 0 1 160 160v680a160 160 0 0 1-160 160H160A160 160 0 0 1 0 840V0Z'
      />
      <path
        fill='#fff'
        d='M816.54 919.9c-32.39 0-57.16-9.42-74.5-28.35-17.15-19.03-26.08-46.18-26.88-81.64h69.8c.4 31.36 11.42 47.08 33.08 47.08 11.04 0 18.86-3.5 23.37-10.42 4.41-6.9 6.72-17.93 6.72-33.05 0-12.02-3.01-22.04-8.83-29.95a73.2 73.2 0 0 0-29.48-21.14L783.95 750c-23.06-11.02-39.81-24.04-50.14-39.27-10.03-15.13-15.04-36.36-15.04-63.5 0-30.36 8.83-55 26.37-73.94 18.05-18.93 42.62-28.34 74-28.34 30.3 0 53.76 9.31 70.3 27.84 16.85 18.64 25.67 45.28 26.38 80.14h-67.19c.4-11.4-1.9-22.72-6.72-33.06-3.8-7.6-11.23-11.41-22.26-11.41-19.65 0-29.48 11.71-29.48 35.05 0 11.83 2.4 21.04 7.22 28.05A65.18 65.18 0 0 0 822.76 689l24.77 10.92c25.57 11.72 44.02 26.05 55.35 43.38 11.43 17.23 17.05 40.27 17.05 69.12 0 34.56-9.03 61.1-27.38 79.63-18.25 18.53-43.62 27.85-76 27.85Zm-225.42 0c-32.4 0-57.16-9.42-74.51-28.35-17.15-19.03-26.07-46.18-26.87-81.64h69.79c.4 31.36 11.43 47.08 33.1 47.08 11.02 0 18.84-3.5 23.25-10.42 4.52-6.9 6.72-17.93 6.72-33.05 0-12.02-2.9-22.04-8.72-29.95a73.2 73.2 0 0 0-29.48-21.14L558.53 750c-23.07-11.02-39.81-24.04-50.14-39.27-10.03-15.13-15.04-36.36-15.04-63.5 0-30.36 8.82-55 26.37-73.94 18.05-18.93 42.62-28.34 74-28.34 30.29 0 53.75 9.31 70.2 27.84 17.05 18.64 25.77 45.28 26.47 80.14h-67.18c.4-11.4-1.9-22.72-6.72-33.06-3.81-7.6-11.23-11.41-22.26-11.41-19.66 0-29.49 11.71-29.49 35.05 0 11.83 2.41 21.04 7.22 28.05A65.18 65.18 0 0 0 597.33 689l24.77 10.92c25.57 11.72 44.02 26.05 55.36 43.38 11.33 17.23 17.04 40.27 17.04 69.12 0 34.56-9.12 61.1-27.37 79.63-18.25 18.53-43.62 27.85-76.01 27.85Zm-234.75 0c-31.7 0-56.86-8.62-75.51-25.85-18.65-17.12-27.88-42.87-27.88-76.93V648.83c0-33.85 9.83-59.5 29.48-77.13 19.96-17.43 46.13-26.24 78.52-26.24 31.39 0 56.15 9.01 74.5 26.84 18.56 17.93 27.88 44.58 27.88 80.14v13.32h-73.9v-12.92c0-13.72-3.01-23.84-8.83-30.45a26.46 26.46 0 0 0-21.66-10.32c-12.03 0-20.55 4.1-25.37 12.42a79.04 79.04 0 0 0-6.72 36.66v146.26c0 30.55 10.74 46.08 32.1 46.38 10.02 0 17.54-3.61 22.76-10.82a51.74 51.74 0 0 0 7.72-30.46V801.6h73.9v11.42c0 23.74-4.61 43.57-13.94 59.4a88.8 88.8 0 0 1-38.2 35.66 121.46 121.46 0 0 1-54.85 11.82Z'
      />
    </svg>
  )
}

export const HTMLIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      xmlns='http://www.w3.org/2000/svg'
      viewBox='0 0 452 520'
      className={className}
    >
      <path fill='#e34f26' d='M41 460L0 0h451l-41 460-185 52' />
      <path fill='#ef652a' d='M226 472l149-41 35-394H226' />
      <path
        fill='#ecedee'
        d='M226 208h-75l-5-58h80V94H84l15 171h127zm0 147l-64-17-4-45h-56l7 89 117 32z'
      />
      <path
        fill='#fff'
        d='M226 265h69l-7 73-62 17v59l115-32 16-174H226zm0-171v56h136l5-56z'
      />
    </svg>
  )
}

export const JavaIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      className={className}
      xmlns='http://www.w3.org/2000/svg'
      preserveAspectRatio='xMidYMid'
      viewBox='0 0 256 346'
    >
      <path
        d='M83 267s-14 8 9 11c27 3 41 2 71-3 0 0 8 5 19 9-67 29-153-2-99-17M74 230s-15 11 8 13c29 3 52 3 92-4 0 0 6 5 15 8-82 24-173 2-115-17'
        fill='#5382A1'
      />
      <path
        d='M144 166c17 19-4 36-4 36s42-22 22-49c-18-26-32-38 44-82 0 0-119 29-62 95'
        fill='#E76F00'
      />
      <path
        d='M233 295s10 8-10 15c-39 12-163 15-197 0-12-5 11-13 18-14l12-2c-14-9-89 19-38 28 138 22 251-10 215-27M89 190s-63 15-22 21c17 2 51 2 83-1 26-2 52-7 52-7l-16 9c-64 16-187 8-151-9 30-14 54-13 54-13M202 253c64-33 34-66 13-61l-7 2s2-3 6-5c41-14 73 43-14 66l2-2'
        fill='#5382A1'
      />
      <path
        d='M162 0s36 36-34 91c-56 45-12 70 0 99-32-30-56-56-40-80 23-35 89-53 74-110'
        fill='#E76F00'
      />
      <path
        d='M95 345c62 4 158-3 160-32 0 0-4 11-51 20-53 10-119 9-158 2 0 0 8 7 49 10'
        fill='#5382A1'
      />
    </svg>
  )
}

export const DockerIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      xmlns='http://www.w3.org/2000/svg'
      viewBox='0 0 24 24'
      fill='#008fe2'
      className={className}
    >
      <path d='M13.98 11.08h2.12a.19.19 0 0 0 .19-.19V9.01a.19.19 0 0 0-.19-.19h-2.12a.18.18 0 0 0-.18.18v1.9c0 .1.08.18.18.18m-2.95-5.43h2.12a.19.19 0 0 0 .18-.19V3.57a.19.19 0 0 0-.18-.18h-2.12a.18.18 0 0 0-.19.18v1.9c0 .1.09.18.19.18m0 2.71h2.12a.19.19 0 0 0 .18-.18V6.29a.19.19 0 0 0-.18-.18h-2.12a.18.18 0 0 0-.19.18v1.89c0 .1.09.18.19.18m-2.93 0h2.12a.19.19 0 0 0 .18-.18V6.29a.18.18 0 0 0-.18-.18H8.1a.18.18 0 0 0-.18.18v1.89c0 .1.08.18.18.18m-2.96 0h2.11a.19.19 0 0 0 .19-.18V6.29a.18.18 0 0 0-.19-.18H5.14a.19.19 0 0 0-.19.18v1.89c0 .1.08.18.19.18m5.89 2.72h2.12a.19.19 0 0 0 .18-.19V9.01a.19.19 0 0 0-.18-.19h-2.12a.18.18 0 0 0-.19.18v1.9c0 .1.09.18.19.18m-2.93 0h2.12a.18.18 0 0 0 .18-.19V9.01a.18.18 0 0 0-.18-.19H8.1a.18.18 0 0 0-.18.18v1.9c0 .1.08.18.18.18m-2.96 0h2.11a.18.18 0 0 0 .19-.19V9.01a.18.18 0 0 0-.18-.19H5.14a.19.19 0 0 0-.19.19v1.88c0 .1.08.19.19.19m-2.92 0h2.12a.18.18 0 0 0 .18-.19V9.01a.18.18 0 0 0-.18-.19H2.22a.18.18 0 0 0-.19.18v1.9c0 .1.08.18.19.18m21.54-1.19c-.06-.05-.67-.51-1.95-.51-.34 0-.68.03-1.01.09a3.77 3.77 0 0 0-1.72-2.57l-.34-.2-.23.33a4.6 4.6 0 0 0-.6 1.43c-.24.97-.1 1.88.4 2.66a4.7 4.7 0 0 1-1.75.42H.76a.75.75 0 0 0-.76.75 11.38 11.38 0 0 0 .7 4.06 6.03 6.03 0 0 0 2.4 3.12c1.18.73 3.1 1.14 5.28 1.14.98 0 1.96-.08 2.93-.26a12.25 12.25 0 0 0 3.82-1.4 10.5 10.5 0 0 0 2.61-2.13c1.25-1.42 2-3 2.55-4.4h.23c1.37 0 2.21-.55 2.68-1 .3-.3.55-.66.7-1.06l.1-.28Z' />
    </svg>
  )
}

export const JavascriptIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      className={className}
      xmlns='http://www.w3.org/2000/svg'
      width='2500'
      height='2500'
      viewBox='0 0 1052 1052'
    >
      <path fill='#f0db4f' d='M0 0h1052v1052H0z' />
      <path
        d='M965.9 801.1c-7.7-48-39-88.3-131.7-125.9-32.2-14.8-68.1-25.399-78.8-49.8-3.8-14.2-4.3-22.2-1.9-30.8 6.9-27.9 40.2-36.6 66.6-28.6 17 5.7 33.1 18.801 42.8 39.7 45.4-29.399 45.3-29.2 77-49.399-11.6-18-17.8-26.301-25.4-34-27.3-30.5-64.5-46.2-124-45-10.3 1.3-20.699 2.699-31 4-29.699 7.5-58 23.1-74.6 44-49.8 56.5-35.6 155.399 25 196.1 59.7 44.8 147.4 55 158.6 96.9 10.9 51.3-37.699 67.899-86 62-35.6-7.4-55.399-25.5-76.8-58.4-39.399 22.8-39.399 22.8-79.899 46.1 9.6 21 19.699 30.5 35.8 48.7 76.2 77.3 266.899 73.5 301.1-43.5 1.399-4.001 10.6-30.801 3.199-72.101zm-394-317.6h-98.4c0 85-.399 169.4-.399 254.4 0 54.1 2.8 103.7-6 118.9-14.4 29.899-51.7 26.2-68.7 20.399-17.3-8.5-26.1-20.6-36.3-37.699-2.8-4.9-4.9-8.7-5.601-9-26.699 16.3-53.3 32.699-80 49 13.301 27.3 32.9 51 58 66.399 37.5 22.5 87.9 29.4 140.601 17.3 34.3-10 63.899-30.699 79.399-62.199 22.4-41.3 17.6-91.3 17.4-146.6.5-90.2 0-180.4 0-270.9z'
        fill='#323330'
      />
    </svg>
  )
}
